openapi: 3.0.1
info:
  title: MOLGENIS data & metadata API
  description: RESTful API to create/read/update/delete data and metadata.
  license:
    name: GNU LGPLv3
    url: https://www.gnu.org/licenses/lgpl-3.0.en.html
  version: 3.0.0
servers:
- url: http://localhost:8080/api/data
security:
- ApiKeyAuth: []
tags:
- name: Data
  description: Create, read, update and delete data
paths:
  /data/{resourceTypeId}:
    get:
      tags:
      - Data
      summary: Retrieves a list of resources
      operationId: dataResourceTypeIdGET
      parameters:
      - name: resourceTypeId
        in: path
        description: Resource type identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Node
      - name: page
        in: query
        description: Page number
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: Page size
        required: false
        style: form
        explode: true
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          default: 20
      - name: q
        in: query
        description: Query. [RSQL expression](https://github.com/jirutka/rsql-parser)
          where operator is '==' (equal to), '!=' (not equal to), '=lt=' or '<' (less
          than), '=le=' or '<=' (less than or equal to), '=gt=' or '>' (greater than),
          '=ge=' or '>=' (greater than or equal to), '=like=' (contains) or '=q='
          (matches).
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: label=q=node
      - name: sort
        in: query
        description: Sort order
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: id,label,-description
      - name: filter
        in: query
        description: Fields to return
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: id,label
      - name: expand
        in: query
        description: Fields to expands
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: child
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCollection'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-swagger-router-controller: Data
    post:
      tags:
      - Data
      summary: Creates a resource.
      operationId: dataResourceTypeIdPOST
      parameters:
      - name: resourceTypeId
        in: path
        description: Resource type identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Node
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceCreate'
            example:
              label: updated label
      responses:
        201:
          description: Created
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-swagger-router-controller: Data
    delete:
      tags:
      - Data
      summary: Delete resources
      operationId: dataResourceTypeIdDELETE
      parameters:
      - name: resourceTypeId
        in: path
        description: Resource type identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Node
      - name: q
        in: query
        description: Query. [RSQL expression](https://github.com/jirutka/rsql-parser)
          where operator is '==' (equal to), '!=' (not equal to), '=lt=' or '<' (less
          than), '=le=' or '<=' (less than or equal to), '=gt=' or '>' (greater than),
          '=ge=' or '>=' (greater than or equal to), '=like=' (contains) or '=q='
          (matches).
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: label=q=node
      responses:
        204:
          description: No Content
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-swagger-router-controller: Data
  /data/{resourceTypeId}/{resourceId}:
    get:
      tags:
      - Data
      summary: Retrieves a resource
      operationId: dataResourceTypeIdResourceIdGET
      parameters:
      - name: resourceTypeId
        in: path
        description: Resource type identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Node
      - name: resourceId
        in: path
        description: Resource identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 1
      - name: filter
        in: query
        description: Fields to return
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: id,label
      - name: expand
        in: query
        description: Fields to expands
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: child
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Resource'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-swagger-router-controller: Data
    put:
      tags:
      - Data
      summary: Updates a resource
      operationId: dataResourceTypeIdResourceIdPUT
      parameters:
      - name: resourceTypeId
        in: path
        description: Resource type identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Node
      - name: resourceId
        in: path
        description: Resource identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceUpdate'
            example:
              label: label
              description: updated description
              parent: 1
              children:
              - 2
              - 3
      responses:
        204:
          description: No Content
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-swagger-router-controller: Data
    delete:
      tags:
      - Data
      summary: Deletes a resource.
      operationId: dataResourceTypeIdResourceIdDELETE
      parameters:
      - name: resourceTypeId
        in: path
        description: Resource type identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Node
      - name: resourceId
        in: path
        description: Resource identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 1
      responses:
        204:
          description: No Content
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-swagger-router-controller: Data
    patch:
      tags:
      - Data
      summary: Updates a resource with the specified attributes
      operationId: dataResourceTypeIdResourceIdPATCH
      parameters:
      - name: resourceTypeId
        in: path
        description: Resource type identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Node
      - name: resourceId
        in: path
        description: Resource identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceUpdate'
            example:
              label: updated label
      responses:
        204:
          description: No Content
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-swagger-router-controller: Data
  /data/{resourceTypeId}/{resourceId}/{fieldId}:
    get:
      tags:
      - Data
      summary: Retrieves a list of sub-resources for a resource field
      operationId: dataResourceTypeIdResourceIdFieldIdGET
      parameters:
      - name: resourceTypeId
        in: path
        description: Resource type identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: Node
      - name: resourceId
        in: path
        description: Resource identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: 1
      - name: fieldId
        in: path
        description: Field identifier
        required: true
        style: simple
        explode: false
        schema:
          type: string
        example: label
      - name: page
        in: query
        description: Page number
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          default: 0
      - name: size
        in: query
        description: Page size
        required: false
        style: form
        explode: true
        schema:
          maximum: 10000
          minimum: 1
          type: integer
          default: 20
      - name: q
        in: query
        description: Query. [RSQL expression](https://github.com/jirutka/rsql-parser)
          where operator is '==' (equal to), '!=' (not equal to), '=lt=' or '<' (less
          than), '=le=' or '<=' (less than or equal to), '=gt=' or '>' (greater than),
          '=ge=' or '>=' (greater than or equal to), '=like=' (contains) or '=q='
          (matches).
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: label=q=node
      - name: sort
        in: query
        description: Sort order
        required: false
        style: form
        explode: false
        schema:
          type: string
        example: id,label,-description
      - name: filter
        in: query
        description: Fields to return
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: id,label
      - name: expand
        in: query
        description: Fields to expands
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: child
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceCollection'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        404:
          description: The specified resource was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Problem'
      x-swagger-router-controller: Data
components:
  schemas:
    Links:
      required:
      - self
      type: object
      properties:
        previous:
          type: string
          format: uri
        self:
          type: string
          format: uri
        next:
          type: string
          format: uri
      example:
        previous: https://my.molgenis.org/api/data/Node?number=0
        self: https://my.molgenis.org/api/data/Node?number=1
        next: https://my.molgenis.org/api/data/Node?number=2
    Page:
      required:
      - number
      - size
      - totalElements
      - totalPages
      type: object
      properties:
        size:
          minimum: 0
          type: number
        totalElements:
          minimum: 0
          type: number
        totalPages:
          minimum: 0
          type: number
        number:
          minimum: 0
          type: number
      example:
        size: 20
        totalElements: 100
        totalPages: 5
        number: 1
    Resource:
      required:
      - data
      - links
      type: object
      properties:
        links:
          $ref: '#/components/schemas/Links'
        data:
          $ref: '#/components/schemas/ResourceData'
      example:
        data:
          id: 0
          parent: https://my.molgenis.org/api/data/Node/1
          children: https://my.molgenis.org/api/data/Node/0/children
    ResourceData:
      type: object
      example:
        id: 0
        parent: https://my.molgenis.org/api/data/Node/1
        children: https://my.molgenis.org/api/data/Node/0/children
    ResourceCreate:
      type: object
      example:
        parent: 1
        children:
        - 2
        - 3
    ResourceUpdate:
      type: object
      example:
        id: 0
        parent: 1
        children:
        - 2
        - 3
    ResourceCollection:
      required:
      - items
      - links
      - page
      type: object
      properties:
        links:
          $ref: '#/components/schemas/Links'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Resource'
        page:
          $ref: '#/components/schemas/Page'
      example:
        links:
          previous: https://my.molgenis.org/api/data/Node?number=0
          self: https://my.molgenis.org/api/data/Node?number=1
          next: https://my.molgenis.org/api/data/Node?number=2
        page:
          size: 20
          totalElements: 100
          totalPages: 5
          number: 1
        items:
        - data:
            id: 0
            parent: https://my.molgenis.org/api/data/Node/1
            children: https://my.molgenis.org/api/data/Node/0/children
        - data:
            id: 0
            parent: https://my.molgenis.org/api/data/Node/1
            children: https://my.molgenis.org/api/data/Node/0/children
    Problem:
      type: object
      properties:
        type:
          type: string
          description: An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type (e.g.,
            using HTML).
          format: uri
          example: https://zalando.github.io/problem/constraint-violation
          default: about:blank
        title:
          type: string
          description: A short, summary of the problem type. Written in english and
            readable for engineers (usually not suited for non technical stakeholders
            and not localized)
          example: Service Unavailable
        status:
          maximum: 600
          exclusiveMaximum: true
          minimum: 100
          type: integer
          description: The HTTP status code generated by the origin server for this
            occurrence of the problem.
          format: int32
          example: 503
        detail:
          type: string
          description: A human readable explanation specific to this occurrence of
            the problem.
          example: Connection to database timed out
        instance:
          type: string
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
          format: uri
        errorCode:
          type: string
          description: The MOLGENIS error code for the thrown exception.
  responses:
    OkResource:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Resource'
    OkResourceCollection:
      description: OK
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceCollection'
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
    Conflict:
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
    Created:
      description: Created
    NoContent:
      description: No Content
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Problem'
  parameters:
    resourceTypeId:
      name: resourceTypeId
      in: path
      description: Resource type identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: Node
    resourceId:
      name: resourceId
      in: path
      description: Resource identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: 1
    fieldId:
      name: fieldId
      in: path
      description: Field identifier
      required: true
      style: simple
      explode: false
      schema:
        type: string
      example: label
    page:
      name: page
      in: query
      description: Page number
      required: false
      style: form
      explode: true
      schema:
        minimum: 0
        type: integer
        default: 0
    size:
      name: size
      in: query
      description: Page size
      required: false
      style: form
      explode: true
      schema:
        maximum: 10000
        minimum: 1
        type: integer
        default: 20
    sort:
      name: sort
      in: query
      description: Sort order
      required: false
      style: form
      explode: false
      schema:
        type: string
      example: id,label,-description
    filter:
      name: filter
      in: query
      description: Fields to return
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: id,label
    expand:
      name: expand
      in: query
      description: Fields to expands
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: child
    query:
      name: q
      in: query
      description: Query. [RSQL expression](https://github.com/jirutka/rsql-parser)
        where operator is '==' (equal to), '!=' (not equal to), '=lt=' or '<' (less
        than), '=le=' or '<=' (less than or equal to), '=gt=' or '>' (greater than),
        '=ge=' or '>=' (greater than or equal to), '=like=' (contains) or '=q=' (matches).
      required: false
      style: form
      explode: true
      schema:
        type: string
      example: label=q=node
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: x-molgenis-token
      in: header
